openapi: 3.0.0
info:
  title: Bookshelf API
  version: 1.0.0
  description: API for managing books on a virtual bookshelf.

paths:

  #Book API
  /books:
    get:
      summary: Get all books
      responses:
        200:
          description: A list of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'

    post:
      summary: Add a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        201:
          description: The newly created book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'

  /books/book/{id}:
    get:
      summary: Get a specific book by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the book to retrieve
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: The book with the specified ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        404:
          description: Book not found

    put:
      summary: Update an existing book
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the book to update
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        200:
          description: The updated book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        404:
          description: Book with the given id does not exist in database.


    delete:
      summary: Delete an existing book
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the book to delete
          schema:
            type: integer
            format: int64
      responses:
        204:
          description: Book deleted successfully
        404:
          description: Book with the given id does not exist in database.

#Book Components
components:
  schemas:

    Book:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        subtitle:
          type: string
        edition_number:
          type: integer
          format: int32
        page_number:
          type: integer
          format: int32
        publication_date:
          type: string
          format: date
        isbn:
          type: string
        cover_file_name:
          type: string
        book_file_name:
          type: string
        summary: 
          type: string
        language:
          $ref: '#/components/schemas/Language'
        publisher:
          $ref: '#/components/schemas/Publisher'
        authors:
          type: array
          items: $ref: '#/components/schemas/Author'
        translators:
          type: array
          items: $ref: '#/components/schemas/Translator'
        genres:
          type: array
          items: $ref: '#/components/schemas/Genre'
        file_types:
          type: array
          items: $ref: '#/components/schemas/FileType'
      required:
        - id
        - title
        - cover_file_name
        - language
        - publisher

    Language:
      type: object
          properties:
            id:
              type: integer
              format: int64
            name: 
              type: string
          required:
            - id
            - name

    Publisher:
      type: object
          properties:
            id:
              type: integer
              format: int64
            name:
              type: string
          required:
            - id
            - name
    
    Author:
      type: object
          properties:
            id:
              type: integer
              format: int64
            first_name:
              type: string
            middle_name:
              type: string
            last_name:
              type: string
          required:
            - id
            - first_name
            - last_name
    
    Translator:
      type: object
          properties:
            id:
              type: integer
              format: int64
            first_name:
              type: string
            middle_name:
              type: string
            last_name:
              type: string
          required:
            - id
            - first_name
            - last_name
    
    Genre:
      type: object
          properties:
            id: 
              type: integer
              format: int64
            name:
              type: string
          required:
            - id
            - name

    FileType:
      type: object
          properties:
            id: 
              type: integer
              format: int64
            full_name:
              type: string
            short_name:
              type: string
          required:
            - id
            - full_name
            - short_name
